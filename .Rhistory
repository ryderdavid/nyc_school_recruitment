# studentaddress_zip to zip, then cast year as numeric
recruitment_data %<>%
mutate(enrollment_period = str_sub(enrollment_period, 1, 4)) %>%
rename(year = enrollment_period, zip = studentaddress_zip) %>%
mutate(year = as.numeric(year)) %>%
filter(!is.na(studentaddress_coordinates)) %>% # to remove one pesky record in 2018...
separate(studentaddress_coordinates, c("lat", "long"), sep = ",") %>%
mutate(long = as.numeric(long), lat = as.numeric(lat))
# One hand fix to correct a typo in data entry
recruitment_data[recruitment_data$zip == "1.047", "zip"] <- "10473"
# recruitment data for manhattan and bx only
recruitment_data_man_bx <- recruitment_data %>%
filter(zip %in% seq(10000, 10299) | zip %in% seq(10400, 10499))
# convert recruitment_data to simple features file
recruitment_data <- recruitment_data %>% st_as_sf(coords = c("long", "lat")) %>% set_st_crs(NYC_CRS)
# Read in the data from each sheet
sheet_1 <- read_xlsx("historical_recruitment_data.xlsx", sheet = 1)
sheet_2 <- read_xlsx("historical_recruitment_data.xlsx", sheet = 2)
sheet_3 <- read_xlsx("historical_recruitment_data.xlsx", sheet = 3)
# The below three commands clean and standardize the colnames for each sheet's
# vars
str_to_lower(str_replace_all(names(sheet_1),
"[^[:alnum:]]|[^[:ascii:]]", "_")) %>%
str_replace_all("[:punct:]+", "_") %>%
str_replace_all("^[:punct:]|[:punct:]$", "") -> names(sheet_1)
str_to_lower(str_replace_all(names(sheet_2),
"[^[:alnum:]]|[^[:ascii:]]", "_")) %>%
str_replace_all("[:punct:]+", "_") %>%
str_replace_all("^[:punct:]|[:punct:]$", "") -> names(sheet_2)
str_to_lower(str_replace_all(names(sheet_3),
"[^[:alnum:]]|[^[:ascii:]]", "_")) %>%
str_replace_all("[:punct:]+", "_") %>%
str_replace_all("^[:punct:]|[:punct:]$", "") -> names(sheet_3)
# Select just the cols we need - location and application pd. Also commonly
# format zip codes (sheet two was numeric, sheets 1 and 3 were strings with
# trailing nonsignificant 0)
sheet_1 %>% mutate(studentaddress_zip =
str_sub(as.character(studentaddress_zip),
1, 5)) -> sheet_1_trimmed
sheet_2 %>% mutate(studentaddress_zip =
str_sub(as.character(studentaddress_zip),
1, 5)) -> sheet_2_trimmed
sheet_3 %>% mutate(studentaddress_zip =
str_sub(as.character(studentaddress_zip),
1, 5)) -> sheet_3_trimmed
# Combine the three sheets
bind_rows(sheet_1_trimmed,
sheet_2_trimmed,
sheet_3_trimmed) -> recruitment_data # used to be recruitment_data_man_bx_merged
# Clean up unneeded vars
rm(list = c("sheet_1",
"sheet_1_trimmed",
"sheet_2",
"sheet_2_trimmed",
"sheet_3",
"sheet_3_trimmed"))
# Strip extraneous year from enrollment period and rename to "year", rename
# studentaddress_zip to zip, then cast year as numeric
recruitment_data %<>%
mutate(enrollment_period = str_sub(enrollment_period, 1, 4)) %>%
rename(year = enrollment_period, zip = studentaddress_zip) %>%
mutate(year = as.numeric(year)) %>%
filter(!is.na(studentaddress_coordinates)) %>% # to remove one pesky record in 2018...
separate(studentaddress_coordinates, c("lat", "long"), sep = ",") %>%
mutate(long = as.numeric(long), lat = as.numeric(lat))
# One hand fix to correct a typo in data entry
recruitment_data[recruitment_data$zip == "1.047", "zip"] <- "10473"
# recruitment data for manhattan and bx only
recruitment_data_man_bx <- recruitment_data %>%
filter(zip %in% seq(10000, 10299) | zip %in% seq(10400, 10499))
# convert recruitment_data to simple features file
recruitment_data <- recruitment_data %>% st_as_sf(coords = c("long", "lat")) %>% st_set_crs(NYC_CRS)
head(recruitment_data)
# convert recruitment_data to simple features file
recruitment_data <- recruitment_data %>% st_as_sf(coords = c("long", "lat"), crs = NYC_CRS)
# SF of application points
application_points <- recruitment_data %>%
mutate(registered = ifelse(!is.na(registration_completed_date), T, F))
# SF of registration points - just those that filtered as registered
registration_points <- application_points %>%
dplyr::select(-registration_completed_date) %>% filter(registered == T) %>%
dplyr::select(-registered)
head(recruitment_data)
recruitment_data_2017 <- recruitment_data %>% filter(year == 2017)
# get most recruitment in 2017 by NTA
st_join(nyc_ntas, recruitment_data)
# get most recruitment in 2017 by NTA
st_join(nyc_ntas, recruitment_data) %>% count(ntaCode, ntaname, year)
st_join(nyc_ntas, recruitment_data)
# get most recruitment in 2017 by NTA
st_join(nyc_ntas, recruitment_data) %>% count(ntacode, ntaname, year)
# get most recruitment in 2017 by NTA
st_join(nyc_ntas, recruitment_data) %>% count(year, ntacode, ntaname)
# get most recruitment in 2017 by NTA
st_join(nyc_ntas, recruitment_data) %>% count(year, ntacode, ntaname) %>% arrange(desc(n))
# get most recruitment in 2017 by NTA
applications_by_nta_and_year <- st_join(nyc_ntas, recruitment_data) %>% count(year, ntacode, ntaname) %>% group_by(year) %>% arrange(desc(n))
applications_by_nta_and_year
applications_by_nta_and_year %>% group_by(year) %>% arrange(desc(n), .by_group = T)
applications_by_nta_and_year %>% group_by(ntacode) %>% arrange(year, .by_group = T)
unique(recruitment_data$year)
# get most recruitment in 2017 by NTA
applications_by_nta_and_year <- st_join(nyc_ntas, recruitment_data, na.rm = T) %>% count(year, ntacode, ntaname) %>% group_by(ntacode) %>% arrange(year, .by_group = T)
# get most recruitment in 2017 by NTA
applications_by_nta_and_year <- st_join(nyc_ntas, recruitment_data) %>% filter(!is.na(year)) %>% count(year, ntacode, ntaname) %>% group_by(ntacode) %>% arrange(year, .by_group = T)
applications_by_nta_and_year
source("functions.R")
set_sourcefile_wd()
source("functions.R")
applications_by_nta_and_year %>% group_by(ntacode, ntaname) %>% tally(n)
applications_by_nta <- applications_by_nta_and_year %>% group_by(ntacode, ntaname) %>% tally(n) %>% arrange(desc(n))
applications_by_nta_and_year %>% group_by(ntacode, ntaname) %>% tally(n) %>% arrange(desc(n))
applications_by_nta_and_year %>% group_by(ntacode, ntaname) %>% tally(n) %>% arrange(desc(nn))
applications_by_nta <- applications_by_nta_and_year %>% group_by(ntacode, ntaname) %>% tally(n) %>% arrange(desc(nn))
tmap_man_bx_background() +
tm_shape(applications_by_nta) +
tm_borders() +
tm_fill(col = "nn")
plot(applications_by_nta)
tm_shape(applications_by_nta) + tm_borders()
tm_shape(st_geometry(applications_by_nta)) + tm_borders()
applications_by_nta <- st_join(nyc_ntas, recruitment_data)
head(applications_by_nta)
applications_by_nta %>% count(ntacode, ntaname)
applications_by_nta <- st_join(nyc_ntas, recruitment_data) %>% count(ntacode, ntaname)
applications_by_nta %>% arrange(desc(n))
tm_shape(applications_by_nta) + tm_borders()
tm_shape(applications_by_nta) + tm_borders() + tm_fill(col = "n")
# get most recruitment in 2017 by NTA
applications_by_nta_and_year <- st_join(nyc_ntas, recruitment_data, left = F) %>% filter(!is.na(year)) %>% count(year, ntacode, ntaname) %>% group_by(ntacode) %>% arrange(year, .by_group = T)
applications_by_nta <- st_join(nyc_ntas, recruitment_data, left = F) %>% count(ntacode, ntaname)
tm_shape(applications_by_nta) + tm_borders() + tm_fill(col = "n")
tmap_man_bx_background() +
tm_shape(applications_by_nta) +
tm_borders() +
tm_fill(col = "nn",
convert2density = T)
tmap_man_bx_background() +
tm_shape(applications_by_nta) +
tm_borders() +
tm_fill(col = "nn",
convert2density = T)
tm_shape(applications_by_nta) + tm_borders() + tm_fill(col = "n", convert2density = T)
tm_shape(applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = "manual")
tm_shape(applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(0,50,100,150,200,250))
tm_shape(applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250))
tmap_man_bx_background()
tmap_man_bx_background() +
tm_shape(applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250))
mean(applications_by_nta)
mean(applications_by_nta$n)
median(applications_by_nta$n)
mean(applications_by_nta$n)
above_avg_applications_by_nta <- applications_by_nta %>% filter(n > mean(applications_by_nta)$n)
applications_by_nta$n
above_avg_applications_by_nta <- applications_by_nta %>% filter(n > mean(applications_by_nta$n))
tmap_man_bx_background() +
tm_shape(above_avg_applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250))
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250))
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250)) + tm_text(ntaname)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250)) + tm_text("ntaname")
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250)) + tm_text("ntaname", size = .2)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250)) + tm_text("ntaname", size = .5)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta) + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250)) + tm_text("ntacode", size = .5)
nyc_ntas
nyc_ntas %>% filter(ntacode == "BX52")
nyc_ntas %>% filter(ntacode == "BX52")$geometry
nyc_ntas %>% filter(ntacode == "BX52") %>% st_geometry()
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") + tm_borders() + tm_fill(col = "n", breaks = c(1,50,100,150,200,250)) + tm_text("ntacode", size = .5)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = c(1,50,100,150,200,250)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(min(above_avg_applications_by_nta),
max(above_avg_applications_by_nta),
by = 50)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(min(above_avg_applications_by_nta),
max(above_avg_applications_by_nta),
50)) +
tm_text("ntacode", size = .7)
tm_fill(col = "n", breaks = c(min(above_avg_applications_by_nta),50,100,150,200,250) +
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = c(min(above_avg_applications_by_nta),50,100,150,200,250)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = c(min(above_avg_applications_by_nta$n),50,100,150,200,250)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(min(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n),
by = 50)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(min(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n) / 5)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n") +
tm_text("ntacode", size = .7)
breaks = seq(min(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n) / 5)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(min(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n) / 5)) +
tm_text("ntacode", size = .7)
tmap_mode("view")
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(min(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n) / 5)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(min(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n) / 5)) +
tm_text("ntacode", size = .7)
tmap_mode("plot")
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(min(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n),
max(above_avg_applications_by_nta$n) / 5)) +
tm_text("ntacode", size = .7)
plot_min <- min(above_avg_applications_by_nta$n %>% round(digits = 0)
plot_min <- min(above_avg_applications_by_nta$n %>% round(digits = 0))
brk_max <- max(above_avg_applications_by_nta$n %>% round(digits = 0))
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max / 5) +
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max / 5)) +
tm_text("ntacode", size = .7)
brk_max <- max(above_avg_applications_by_nta$n %>% round(digits = 0))
brk_max <- max(above_avg_applications_by_nta$n %>% round(digits = 0))
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max / 5)) +
tm_text("ntacode", size = .7)
brk_min <- min(above_avg_applications_by_nta$n %>% round(digits = 0))
brk_max <- max(above_avg_applications_by_nta$n %>% round(digits = 0))
tmap_mode("plot")
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max / 5)) +
tm_text("ntacode", size = .7)
brk_max
brk_min <- min(above_avg_applications_by_nta$n
brk_min <- min(above_avg_applications_by_nta$n)
brk_max <- max(above_avg_applications_by_nta$n)
brk_max
brk_min
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max // 5)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max // 5)) +
tm_text("ntacode", size = .7)
brk_min <- min(above_avg_applications_by_nta$n)
brk_max <- max(above_avg_applications_by_nta$n)
tmap_mode("plot")
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max // 5)) +
tm_text("ntacode", size = .7)
above_avg_applications_by_nta
above_avg_applications_by_nta <- applications_by_nta %>% filter(n > mean(applications_by_nta$n))
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max // 5)) +
tm_text("ntacode", size = .7)
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders()
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max / 5))
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max / 5)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max / 5)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max %/% 5)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max %/% 6)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, brk_max %/% 7)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = seq(brk_min, brk_max, (brk_max - brk_min) %/% 5)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = fivenum(above_avg_applications_by_nta$n)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = quantile(above_avg_applications_by_nta$n)) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = quantile(above_avg_applications_by_nta$n, prob = seq(0,1,6))) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = quantile(above_avg_applications_by_nta$n, prob = seq(0,1,length=6))) +
tm_text("ntacode", size = .7)
tmap_man_bx_zoom() +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = fivenum(above_avg_applications_by_nta$n)) +
tm_text("ntacode", size = .7)
above_avg_applications_by_nta %>% top_n(5, n)
library(knitr)
above_avg_applications_by_nta %>% top_n(5, n) %>% kable()
above_avg_applications_by_nta %>% top_n(5, n)
tmap_man_bx_zoom() +
tm_shape(nyc_tracts) + tm_borders(alpha = 0.1) +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = fivenum(above_avg_applications_by_nta$n)) +
tm_text("ntacode", size = .7)
st_intersection(nyc_ntas, above_avg_applications_by_nta)
st_intersection(nyc_ntas, above_avg_applications_by_nta) %>% unique()
applications_by_nta <- st_intersection(nyc_ntas, above_avg_applications_by_nta)
above_avg_applications_by_nta <- applications_by_nta %>% filter(n > mean(applications_by_nta$n))
tmap_man_bx_zoom() +
tm_shape(nyc_tracts) + tm_borders(alpha = 0.1) +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders() +
tm_fill(col = "n", breaks = fivenum(above_avg_applications_by_nta$n)) +
tm_text("ntacode", size = .7)
above_avg_applications_by_nta <- applications_by_nta %>% filter(n > mean(applications_by_nta$n))
above_avg_applications_by_nta
tmap_mode("plot")
tmap_man_bx_zoom() +
tm_shape(nyc_tracts) + tm_borders(alpha = 0.1) +
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders()
tm_shape(above_avg_applications_by_nta, point.per = "largest") +
tm_borders()
applications_by_nta <- st_intersection(nyc_ntas, recruitment_data)
above_avg_applications_by_nta <- applications_by_nta %>% filter(n > mean(applications_by_nta$n))
st_intersection(nyc_ntas, recruitment_data)
applications_by_nta <- st_intersection(recruitment_data, nyc_ntas)
above_avg_applications_by_nta <- applications_by_nta %>% filter(n > mean(applications_by_nta$n))
applications_by_nta$n
applications_by_nta <- st_join(nyc_ntas, recruitment_data, left = F) %>% count(ntacode, ntaname)
applications_by_nta <- st_join(nyc_ntas, recruitment_data, left = F) %>% count(ntacode, ntaname) %>% plot()
st_intersection(nyc_ntas, above_avg_applications_by_nta) %>% head()
st_intersection(nyc_ntas, above_avg_applications_by_nta) %>% plot()
# Map ELLs in 2018
sd_demo_snap_18 <- districts_demo_snapshot %>% filter(year == "2017-18")
sd_demo_snap_18_spatial <- merge(nyc_sds, sd_demo_snap_18,
by.x = "SchoolDist",
by.y = "administrative_district") %>%
mutate(total_enrollment = as.numeric(total_enrollment))
sd_demo_snap_18_spatial <- sd_demo_snap_18_spatial %>%
mutate(name_label = paste("SD", SchoolDist, pct_ell, sep = ""))
sch_dem_snp <- schools_demo_snapshot %>% filter(year == "2017-18") %>%
dplyr::select(dbn, school_name, year, total_enrollment, num_ell,
pct_ell, num_pov, pct_pov, num_swd, pct_swd)
sch_dem_snp <- inner_join(school_points, sch_dem_snp, by=c("ats_code" = "dbn"))
avg_ell <- mean(sch_dem_snp$pct_ell)
# filter schools spdf for schools in 90th or greater percentile of % ELL
# enrollment
schools_with_high_ell <- sch_dem_snp %>% filter(pct_ell > quantile(pct_ell, .9))
schools_with_high_ell
schools_with_high_ell %>% plot
schools_with_high_ell %>% st_geometry() %>% plot()
qmap(schools_with_high_ell)
tmap_man_bx_background() +
tm_shape(schools_with_high_ell) + tm_dots
tmap_man_bx_background() +
tm_shape(schools_with_high_ell) + tm_dots()
nyc_tracts <- tidycensus::get_acs(state = "NY",
variables = "B01003_001",
county = c("New York", "Bronx", "Kings", "Queens", "Richmond"),
geography = "tract",
geometry = T,
cb = F)
# replace this with a filter once I figure out how to work sf files
man_bx_tracts <- tidycensus::get_acs(state = "NY",
variables = "B01003_001",
county = c("New York", "Bronx"),
geography = "tract",
geometry = T)
# replace this with a filter once I figure out how to work sf files
man_bx_tracts <- tidycensus::get_acs(state = "NY",
variables = "B01003_001",
county = c("New York", "Bronx"),
geography = "tract",
geometry = T,
cb = F)
tmap_man_bx_background() +
tm_shape(nyc_tracts) + tm_borders(alpha = 0.2) +
tm_shape(schools_with_high_ell) + tm_dots()
st_erase <- function(x, y) {
st_difference(x, st_union(st_combine(y)))
}
ny_water <- area_water("NY", "New York", class = "sf")
ny_erase <- st_erase(nyc_tracts, ny_water)
nyc_tracts <- st_erase(nyc_tracts, ny_water)
tmap_man_bx_background() +
tm_shape(nyc_tracts) + tm_borders(alpha = 0.2) +
tm_shape(schools_with_high_ell) + tm_dots()
ny_water <- area_water("NY", class = "sf")
ny_water <- area_water("NY",
county = c("New York", "Bronx", "Kings", "Queens", "Richmond"),
class = "sf")
nyc_tracts <- st_erase(nyc_tracts, ny_water)
tmap_man_bx_background() +
tm_shape(nyc_tracts) + tm_borders(alpha = 0.2) +
tm_shape(schools_with_high_ell) + tm_dots()
plot(ny_water)
ny_water <- area_water("NY",
county = c("New York", "Bronx", "Kings", "Queens", "Richmond", "Nassau"),
class = "sf")
plot(ny_water)
ny_water <- area_water("NY",
county = c("New York", "Bronx", "Kings", "Queens", "Richmond", "Nassau"),
class = "sf")
ny_water <- area_water(state = "NY",
county = c("New York", "Bronx", "Kings", "Queens", "Richmond", "Nassau"),
class = "sf")
ny_water <- area_water(state = "NY",
county = c("New York", "Bronx", "Kings", "Queens", "Richmond", "Nassau"),
class = "sf")
man_water <- area_water("NY", 'New York', 'sf')
bx_water <- area_water("NY", 'Bronx', 'sf')
bx_water <- area_water("NY", 'Bronx', 'sf')
man_water <- area_water("NY", 'New York', 'sf')
# replace this with a filter once I figure out how to work sf files
man_bx_tracts <- tidycensus::get_acs(state = "NY",
variables = "B01003_001",
county = c("New York", "Bronx"),
geography = "tract",
geometry = T,
cb = F)
# NYC tracts clipped to shoreline available here:
# https://www1.nyc.gov/site/planning/data-maps/open-data/districts-download-metadata.page
nyc_tracts <-
st_read("http://services5.arcgis.com/GfwWNkhOj9bNBqoJ/arcgis/rest/services/nyct2010/FeatureServer/0/query?where=1=1&outFields=*&outSR=4326&f=geojson")
tmap_man_bx_background() + tm_shape(nyc_tracts) + tm_borders()
read_sf("https://data.cityofnewyork.us/resource/9hw3-gi34.geojson") %>% st_crs()
# Download shapefiles for NYC area ZCTAs to render as background layer
nyc_area_zips <-
zctas(cb = T, starts_with = c('070','071','072','073','074',
'075','076','100','101','102',
'103','104','105','106','107',
'108','109','110','111','112',
'113','114','115','116')) %>% as("sf")
